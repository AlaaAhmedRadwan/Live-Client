// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.helper;

import androidx.fragment.app.Fragment;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MyFragmentFactory_Factory implements Factory<MyFragmentFactory> {
  private final Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> creatorProvider;

  public MyFragmentFactory_Factory(
      Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> creatorProvider) {
    this.creatorProvider = creatorProvider;
  }

  @Override
  public MyFragmentFactory get() {
    return newInstance(creatorProvider.get());
  }

  public static MyFragmentFactory_Factory create(
      Provider<Map<Class<? extends Fragment>, Provider<Fragment>>> creatorProvider) {
    return new MyFragmentFactory_Factory(creatorProvider);
  }

  public static MyFragmentFactory newInstance(
      Map<Class<? extends Fragment>, Provider<Fragment>> creator) {
    return new MyFragmentFactory(creator);
  }
}
