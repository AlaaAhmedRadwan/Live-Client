// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.repository;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataRepo_Factory implements Factory<DataRepo> {
  private final Provider<DataSource> datasourcesProvider;

  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public DataRepo_Factory(Provider<DataSource> datasourcesProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.datasourcesProvider = datasourcesProvider;
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public DataRepo get() {
    return newInstance(datasourcesProvider.get(), ioDispatcherProvider.get());
  }

  public static DataRepo_Factory create(Provider<DataSource> datasourcesProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new DataRepo_Factory(datasourcesProvider, ioDispatcherProvider);
  }

  public static DataRepo newInstance(DataSource Datasources, CoroutineDispatcher ioDispatcher) {
    return new DataRepo(Datasources, ioDispatcher);
  }
}
