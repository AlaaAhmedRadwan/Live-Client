// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.presentation.profile_fragment;

import androidx.lifecycle.ViewModelProvider;
import com.codesroots.live.helper.PreferenceHelper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileFragment_Factory implements Factory<ProfileFragment> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<PreferenceHelper> prefProvider;

  public ProfileFragment_Factory(Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<PreferenceHelper> prefProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.prefProvider = prefProvider;
  }

  @Override
  public ProfileFragment get() {
    ProfileFragment instance = newInstance();
    ProfileFragment_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    ProfileFragment_MembersInjector.injectPref(instance, prefProvider.get());
    return instance;
  }

  public static ProfileFragment_Factory create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<PreferenceHelper> prefProvider) {
    return new ProfileFragment_Factory(viewModelFactoryProvider, prefProvider);
  }

  public static ProfileFragment newInstance() {
    return new ProfileFragment();
  }
}
