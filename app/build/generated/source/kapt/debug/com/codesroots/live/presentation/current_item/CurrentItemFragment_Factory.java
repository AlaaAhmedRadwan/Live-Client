// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.presentation.current_item;

import androidx.lifecycle.ViewModelProvider;
import com.codesroots.live.helper.PreferenceHelper;
import com.codesroots.live.models.current_orders.OrdersItem;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CurrentItemFragment_Factory implements Factory<CurrentItemFragment> {
  private final Provider<OrdersItem> itemProvider;

  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  private final Provider<PreferenceHelper> prefProvider;

  public CurrentItemFragment_Factory(Provider<OrdersItem> itemProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<PreferenceHelper> prefProvider) {
    this.itemProvider = itemProvider;
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.prefProvider = prefProvider;
  }

  @Override
  public CurrentItemFragment get() {
    CurrentItemFragment instance = newInstance(itemProvider.get());
    CurrentItemFragment_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    CurrentItemFragment_MembersInjector.injectPref(instance, prefProvider.get());
    return instance;
  }

  public static CurrentItemFragment_Factory create(Provider<OrdersItem> itemProvider,
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider,
      Provider<PreferenceHelper> prefProvider) {
    return new CurrentItemFragment_Factory(itemProvider, viewModelFactoryProvider, prefProvider);
  }

  public static CurrentItemFragment newInstance(OrdersItem item) {
    return new CurrentItemFragment(item);
  }
}
