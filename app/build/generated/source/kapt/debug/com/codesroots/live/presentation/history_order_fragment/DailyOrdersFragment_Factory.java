// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.presentation.history_order_fragment;

import androidx.lifecycle.ViewModelProvider;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DailyOrdersFragment_Factory implements Factory<DailyOrdersFragment> {
  private final Provider<ViewModelProvider.Factory> viewModelFactoryProvider;

  public DailyOrdersFragment_Factory(Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
  }

  @Override
  public DailyOrdersFragment get() {
    DailyOrdersFragment instance = newInstance();
    DailyOrdersFragment_MembersInjector.injectViewModelFactory(instance, viewModelFactoryProvider.get());
    return instance;
  }

  public static DailyOrdersFragment_Factory create(
      Provider<ViewModelProvider.Factory> viewModelFactoryProvider) {
    return new DailyOrdersFragment_Factory(viewModelFactoryProvider);
  }

  public static DailyOrdersFragment newInstance() {
    return new DailyOrdersFragment();
  }
}
