// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.di;

import com.codesroots.live.datalayer.APIServices;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class APIModule_ApiServicesFactory implements Factory<APIServices> {
  private final APIModule module;

  private final Provider<Retrofit> provideRetrofitProvider;

  public APIModule_ApiServicesFactory(APIModule module,
      Provider<Retrofit> provideRetrofitProvider) {
    this.module = module;
    this.provideRetrofitProvider = provideRetrofitProvider;
  }

  @Override
  public APIServices get() {
    return ApiServices(module, provideRetrofitProvider.get());
  }

  public static APIModule_ApiServicesFactory create(APIModule module,
      Provider<Retrofit> provideRetrofitProvider) {
    return new APIModule_ApiServicesFactory(module, provideRetrofitProvider);
  }

  public static APIServices ApiServices(APIModule instance, Retrofit provideRetrofit) {
    return Preconditions.checkNotNullFromProvides(instance.ApiServices(provideRetrofit));
  }
}
