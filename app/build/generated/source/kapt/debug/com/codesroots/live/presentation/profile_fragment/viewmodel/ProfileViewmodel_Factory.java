// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.presentation.profile_fragment.viewmodel;

import com.codesroots.live.repository.DataRepo;
import com.codesroots.live.repository.RemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileViewmodel_Factory implements Factory<ProfileViewmodel> {
  private final Provider<DataRepo> dateRepoCompnayProvider;

  private final Provider<RemoteDataSource> datasourcesProvider;

  public ProfileViewmodel_Factory(Provider<DataRepo> dateRepoCompnayProvider,
      Provider<RemoteDataSource> datasourcesProvider) {
    this.dateRepoCompnayProvider = dateRepoCompnayProvider;
    this.datasourcesProvider = datasourcesProvider;
  }

  @Override
  public ProfileViewmodel get() {
    return newInstance(dateRepoCompnayProvider.get(), datasourcesProvider.get());
  }

  public static ProfileViewmodel_Factory create(Provider<DataRepo> dateRepoCompnayProvider,
      Provider<RemoteDataSource> datasourcesProvider) {
    return new ProfileViewmodel_Factory(dateRepoCompnayProvider, datasourcesProvider);
  }

  public static ProfileViewmodel newInstance(DataRepo DateRepoCompnay,
      RemoteDataSource Datasources) {
    return new ProfileViewmodel(DateRepoCompnay, Datasources);
  }
}
