// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.presentation.auth;

import com.codesroots.live.helper.PreferenceHelper;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthViewModel_MembersInjector implements MembersInjector<AuthViewModel> {
  private final Provider<PreferenceHelper> prefProvider;

  public AuthViewModel_MembersInjector(Provider<PreferenceHelper> prefProvider) {
    this.prefProvider = prefProvider;
  }

  public static MembersInjector<AuthViewModel> create(Provider<PreferenceHelper> prefProvider) {
    return new AuthViewModel_MembersInjector(prefProvider);
  }

  @Override
  public void injectMembers(AuthViewModel instance) {
    injectPref(instance, prefProvider.get());
  }

  @InjectedFieldSignature("com.codesroots.live.presentation.auth.AuthViewModel.Pref")
  public static void injectPref(AuthViewModel instance, PreferenceHelper Pref) {
    instance.Pref = Pref;
  }
}
