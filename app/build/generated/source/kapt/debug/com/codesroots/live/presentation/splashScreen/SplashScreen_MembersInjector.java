// Generated by Dagger (https://dagger.dev).
package com.codesroots.live.presentation.splashScreen;

import com.codesroots.live.helper.PreferenceHelper;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SplashScreen_MembersInjector implements MembersInjector<SplashScreen> {
  private final Provider<PreferenceHelper> prefProvider;

  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  public SplashScreen_MembersInjector(Provider<PreferenceHelper> prefProvider,
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    this.prefProvider = prefProvider;
    this.androidInjectorProvider = androidInjectorProvider;
  }

  public static MembersInjector<SplashScreen> create(Provider<PreferenceHelper> prefProvider,
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    return new SplashScreen_MembersInjector(prefProvider, androidInjectorProvider);
  }

  @Override
  public void injectMembers(SplashScreen instance) {
    injectPref(instance, prefProvider.get());
    injectAndroidInjector(instance, androidInjectorProvider.get());
  }

  @InjectedFieldSignature("com.codesroots.live.presentation.splashScreen.SplashScreen.Pref")
  public static void injectPref(SplashScreen instance, PreferenceHelper Pref) {
    instance.Pref = Pref;
  }

  @InjectedFieldSignature("com.codesroots.live.presentation.splashScreen.SplashScreen.androidInjector")
  public static void injectAndroidInjector(SplashScreen instance,
      DispatchingAndroidInjector<Object> androidInjector) {
    instance.androidInjector = androidInjector;
  }
}
